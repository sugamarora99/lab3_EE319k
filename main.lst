


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Sugam Arora and Joonha "James" Par
                       k
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 1/17/2020
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 2 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: One button and one LED
                       )
    8 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
    9 00000000         ;  PE2 is LED output (1 activates external LED on protob
                       oard)
   10 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal) 
   11 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   12 00000000         ; Overall functionality of this system is to operate lik
                       e this
   13 00000000         ;   1) Make PE2 an output and make PE1 and PF4 inputs.
   14 00000000         ;   2) The system starts with the the LED toggling at 2H
                       z,
   15 00000000         ;      which is 2 times per second with a duty-cycle of 
                       30%.
   16 00000000         ;      Therefore, the LED is ON for 150ms and off for 35
                       0 ms.
   17 00000000         ;   3) When the button (PE1) is pressed-and-released inc
                       rease
   18 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   19 00000000         ;      press-and-release the duty cycle changes from 30%
                        to 70% to 70%
   20 00000000         ;      to 90% to 10% to 30% so on
   21 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   22 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   23 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   24 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   25 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 2Hz.
   26 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   27 00000000         ;         cycle or reset to 30%.
   28 00000000         ;      TIP: debugging the breathing LED algorithm using 
                       the real board.
   29 00000000         ; PortE device registers
   30 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   31 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   33 00000000 4002451C 
                       GPIO_PORTE_DEN_R



ARM Macro Assembler    Page 2 


                               EQU              0x4002451C
   34 00000000         ; PortF device registers
   35 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   36 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   37 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   38 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   39 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   40 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   41 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   42 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   43 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   44 00000000         
   45 00000000 002DC6C0 
                       initHighPulse
                               EQU              0X002DC6C0  ; 3000000
   46 00000000 006ACFC0 
                       initLowPulse
                               EQU              0x006ACFC0  ; 7000000
   47 00000000 001E8480 
                       increment
                               EQU              0X001E8480  ; 2000000
   48 00000000 00989680 
                       total   EQU              0X00989680  ; 10000000
   49 00000000         
   50 00000000 000007D0 
                       breathIncrement
                               EQU              0X000007D0  ; 20000   (for incr
                                                            ementing duty cyle 
                                                            by 5%)
   51 00000000         
   52 00000000 000F4240 
                       comparison
                               EQU              0X000F4240
   53 00000000         
   54 00000000                 IMPORT           TExaS_Init
   55 00000000                 THUMB
   56 00000000                 AREA             DATA, ALIGN=2
   57 00000000         ;global variables go here
   58 00000000         
   59 00000000         



ARM Macro Assembler    Page 3 


   60 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   61 00000000                 THUMB
   62 00000000                 EXPORT           Start
   63 00000000         Start
   64 00000000         ; TExaS_Init sets bus clock at 80 MHz
   65 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   66 00000004         ; Initialization goes here
   67 00000004 484E            LDR              R0,=SYSCTL_RCGCGPIO_R ; R0 poin
                                                            ts to SYSCTL_RCGCGP
                                                            IO_R
   68 00000006 6801            LDR              R1,[R0]     ; read SYSCTL_RCGCG
                                                            PIO_R into R1
   69 00000008 F041 0130       ORR              R1,#0x30    ;turn on clock Bin:
                                                             00010000
   70 0000000C 6001            STR              R1,[R0]     ; write back to SYS
                                                            CTL_RCGCGPIO_R
   71 0000000E BF00            NOP                          ; wait for clock to
                                                             stabilize
   72 00000010 BF00            NOP
   73 00000012 484C            LDR              R0,=GPIO_PORTE_DIR_R
   74 00000014 F04F 0104       MOV              R1,#0x04    ; PE2 output, PE1 i
                                                            nput
   75 00000018 6001            STR              R1,[R0]
   76 0000001A 484B            LDR              R0,=GPIO_PORTE_DEN_R
   77 0000001C F04F 0106       MOV              R1,#0x06    ;enable PE2,PE1
   78 00000020 6001            STR              R1,[R0]
   79 00000022         
   80 00000022 484A            LDR              R0, =GPIO_PORTF_LOCK_R
   81 00000024 494A            LDR              R1, =GPIO_LOCK_KEY
   82 00000026 6001            STR              R1, [R0]
   83 00000028 484A            LDR              R0, =GPIO_PORTF_CR_R
   84 0000002A 6801            LDR              R1, [R0]
   85 0000002C F041 01FF       ORR              R1, #0xFF
   86 00000030 6001            STR              R1, [R0]
   87 00000032 4849            LDR              R0, =GPIO_PORTF_DIR_R
   88 00000034 F021 0110       BIC              R1, #0X10   ; PE4 input for swi
                                                            tch
   89 00000038 6001            STR              R1, [R0]
   90 0000003A 4848            LDR              R0, =GPIO_PORTF_DEN_R
   91 0000003C F04F 0110       MOV              R1, #0X10   ; enable only PF4
   92 00000040 6001            STR              R1, [R0]
   93 00000042 4847            LDR              R0, =GPIO_PORTF_PUR_R
   94 00000044 6801            LDR              R1, [R0]
   95 00000046 F041 0110       ORR              R1, #0x10
   96 0000004A 6001            STR              R1, [R0]
   97 0000004C         
   98 0000004C 4F45            LDR              R7, =GPIO_PORTE_DATA_R ; R0 has
                                                             location of port E
                                                             vector
   99 0000004E F8DF 8118       LDR              R8, =GPIO_PORTF_DATA_R ; R1 has
                                                             location of Port F
                                                             vector
  100 00000052         
  101 00000052 F8DF 9118       LDR              R9, =initHighPulse
  102 00000056 4D46            LDR              R5, =initLowPulse
  103 00000058 F8DF A118       LDR              R10, =increment
  104 0000005C F8DF B118       LDR              R11, =total



ARM Macro Assembler    Page 4 


  105 00000060 F004 0400       AND              R4, #0      ; R4 increments eve
                                                            ry time button is P
                                                            RESSED
  106 00000064 F04F 0C00       MOV              R12, #0
  107 00000068 F04F 0300       MOV              R3, #0
  108 0000006C         
  109 0000006C B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
  110 0000006E         loop
  111 0000006E         ; main engine goes here
  112 0000006E F8D8 1000       LDR              R1, [R8]    ; read PORT F data 
                                                            for SW1
  113 00000072 F001 0110       AND              R1, #0X10
  114 00000076 2900            CMP              R1, #0X00
  115 00000078 D156            BNE              breatheReset
  116 0000007A F000 F82C       BL               beforeBreathe
  117 0000007E         
  118 0000007E         readE
  119 0000007E         
  120 0000007E 6839            LDR              R1, [R7]    ; read PORT E data 
                                                            for switch
  121 00000080 F001 0102       AND              R1, #0X02
  122 00000084 2902            CMP              R1, #0X02
  123 00000086 D10E            BNE              skip
  124 00000088 F000 F810       BL               change
  125 0000008C         
  126 0000008C         
  127 0000008C         
  128 0000008C         afterSkip
  129 0000008C F04F 0004       MOV              R0, #0X04   ; 
  130 00000090 6038            STR              R0, [R7]    ; set PE2 high
  131 00000092 4648            MOV              R0, R9      ; delay for LED hig
                                                            h time 
  132 00000094 F000 F845       BL               delay
  133 00000098 F04F 0000       MOV              R0, #0X00   ; clear PE2 to be l
                                                            ow
  134 0000009C 6038            STR              R0, [R7]
  135 0000009E 4628            MOV              R0, R5
  136 000000A0 F000 F83F       BL               delay
  137 000000A4 E7E3            B                loop
  138 000000A6         
  139 000000A6         skip
  140 000000A6 F04F 0C00       MOV              R12, #0
  141 000000AA E7EF            B                afterSkip
  142 000000AC         
  143 000000AC         change
  144 000000AC         
  145 000000AC 4676            MOV              R6 , R14    ; save linkage
  146 000000AE F1BC 0F01       CMP              R12, #1     ; CHECK FLAG
  147 000000B2 D100            BNE              continue
  148 000000B4 4770            BX               LR
  149 000000B6         
  150 000000B6         continue
  151 000000B6 44D1            ADD              R9, R10
  152 000000B8 45D9            CMP              R9, R11
  153 000000BA         
  154 000000BA D205            BHS              reset
  155 000000BC EBBB 0509       SUBS             R5, R11, R9



ARM Macro Assembler    Page 5 


  156 000000C0 46B6            MOV              R14, R6
  157 000000C2         
  158 000000C2 F04F 0C01       MOV              R12, #1
  159 000000C6 4770            BX               LR
  160 000000C8         
  161 000000C8         
  162 000000C8         
  163 000000C8         
  164 000000C8         
  165 000000C8         
  166 000000C8         
  167 000000C8         
  168 000000C8         
  169 000000C8         
  170 000000C8         
  171 000000C8         
  172 000000C8         
  173 000000C8 EBB9 090B 
                       reset   SUBS             R9, R11
  174 000000CC EBBB 0509       SUBS             R5, R11, R9
  175 000000D0 F04F 0C01       MOV              R12, #1
  176 000000D4 4770            BX               LR
  177 000000D6         
  178 000000D6         beforeBreathe
  179 000000D6 4829            LDR              R0, =comparison
  180 000000D8 4581            CMP              R9, R0
  181 000000DA DD07            BLE              breathe
  182 000000DC F04F 0064       MOV              R0, #100
  183 000000E0 FBB9 F9F0       UDIV             R9, R9, R0
  184 000000E4 FBB5 F5F0       UDIV             R5, R5, R0
  185 000000E8 FBBB FBF0       UDIV             R11, R11, R0
  186 000000EC         
  187 000000EC         breathe
  188 000000EC         
  189 000000EC         
  190 000000EC 2E01            CMP              R6, #1      ;R3 = flag for "is 
                                                            it decrementing" 1=
                                                             yes , 0 = no
  191 000000EE D007            BEQ              decrement
  192 000000F0         
  193 000000F0 F44F 62FA       LDR              R2, =breathIncrement ; increase
                                                             duty cycle by only
                                                             20%
  194 000000F4 4491            ADD              R9, R2
  195 000000F6 EBBB 0509       SUBS             R5, R11, R9
  196 000000FA 45D9            CMP              R9, R11
  197 000000FC DA00            BGE              decrement   ;If R9 becomes grea
                                                            ter than or equal t
                                                            o total, then go to
                                                             decrement
  198 000000FE         
  199 000000FE         
  200 000000FE E7C5            B                afterSkip
  201 00000100         
  202 00000100         
  203 00000100         decrement
  204 00000100         
  205 00000100 EBB9 0902       SUBS             R9, R9, R2
  206 00000104 EBBB 0509       SUBS             R5, R11, R9



ARM Macro Assembler    Page 6 


  207 00000108 F1B9 0F00       CMP              R9, #0
  208 0000010C DC06            BGT              decrementFlag ;If R9 is still g
                                                            reater than 0 after
                                                             decrementing, cont
                                                            inue breathing
  209 0000010E F04F 0901       MOV              R9, #1
  210 00000112 EBBB 0509       SUBS             R5, R11, R9
  211 00000116 F04F 0600       MOV              R6, #0      ;If R9 hits 0, set 
                                                            the flag off
  212 0000011A         
  213 0000011A E7B7            B                afterSkip
  214 0000011C         
  215 0000011C         decrementFlag
  216 0000011C F04F 0601       MOV              R6, #1      ;set Flag R3 for "i
                                                            s it decrementing"
  217 00000120 E7B4            B                afterSkip
  218 00000122         
  219 00000122         
  220 00000122         delay
  221 00000122         
  222 00000122 3801    dloop   SUBS             R0, #1
  223 00000124 D1FD            BNE              dloop
  224 00000126 4770            BX               LR
  225 00000128         
  226 00000128         
  227 00000128         
  228 00000128         breatheReset
  229 00000128 4814            LDR              R0, =comparison
  230 0000012A 4581            CMP              R9, R0
  231 0000012C DA06            BGE              go
  232 0000012E F04F 0064       MOV              R0, #100
  233 00000132 F8DF 9038       LDR              R9, =initHighPulse
  234 00000136 4D0E            LDR              R5, =initLowPulse
  235 00000138 F8DF B03C       LDR              R11, =total
  236 0000013C         go
  237 0000013C E79F            B                readE
  238 0000013E         
  239 0000013E         
  240 0000013E         
  241 0000013E 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  242 00000140                 END                          ; end of file
              400FE608 
              40024400 
              4002451C 
              40025520 
              4C4F434B 
              40025524 
              40025400 
              4002551C 
              40025510 
              400243FC 
              400253FC 
              002DC6C0 
              006ACFC0 
              001E8480 
              00989680 
              000F4240 



ARM Macro Assembler    Page 7 


Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_Lab3 -IC:\Users\austi\AppData\Local\A
rm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\austi\AppData\Local\Arm\
Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --
predefine="__UVISION_VERSION SETA 529" --predefine="_RTE_ SETA 1" --predefine="
TM4C123GH6PM SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 56 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 60 in file main.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 63 in file main.s
   Uses
      At line 62 in file main.s
Comment: Start used once
afterSkip 0000008C

Symbol: afterSkip
   Definitions
      At line 128 in file main.s
   Uses
      At line 141 in file main.s
      At line 200 in file main.s
      At line 213 in file main.s
      At line 217 in file main.s

beforeBreathe 000000D6

Symbol: beforeBreathe
   Definitions
      At line 178 in file main.s
   Uses
      At line 116 in file main.s
Comment: beforeBreathe used once
breathe 000000EC

Symbol: breathe
   Definitions
      At line 187 in file main.s
   Uses
      At line 181 in file main.s
Comment: breathe used once
breatheReset 00000128

Symbol: breatheReset
   Definitions
      At line 228 in file main.s
   Uses
      At line 115 in file main.s
Comment: breatheReset used once
change 000000AC

Symbol: change
   Definitions
      At line 143 in file main.s
   Uses
      At line 124 in file main.s
Comment: change used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

continue 000000B6

Symbol: continue
   Definitions
      At line 150 in file main.s
   Uses
      At line 147 in file main.s
Comment: continue used once
decrement 00000100

Symbol: decrement
   Definitions
      At line 203 in file main.s
   Uses
      At line 191 in file main.s
      At line 197 in file main.s

decrementFlag 0000011C

Symbol: decrementFlag
   Definitions
      At line 215 in file main.s
   Uses
      At line 208 in file main.s
Comment: decrementFlag used once
delay 00000122

Symbol: delay
   Definitions
      At line 220 in file main.s
   Uses
      At line 132 in file main.s
      At line 136 in file main.s

dloop 00000122

Symbol: dloop
   Definitions
      At line 222 in file main.s
   Uses
      At line 223 in file main.s
Comment: dloop used once
go 0000013C

Symbol: go
   Definitions
      At line 236 in file main.s
   Uses
      At line 231 in file main.s
Comment: go used once
loop 0000006E

Symbol: loop
   Definitions
      At line 110 in file main.s
   Uses
      At line 137 in file main.s
Comment: loop used once
readE 0000007E



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: readE
   Definitions
      At line 118 in file main.s
   Uses
      At line 237 in file main.s
Comment: readE used once
reset 000000C8

Symbol: reset
   Definitions
      At line 173 in file main.s
   Uses
      At line 154 in file main.s
Comment: reset used once
skip 000000A6

Symbol: skip
   Definitions
      At line 139 in file main.s
   Uses
      At line 123 in file main.s
Comment: skip used once
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 42 in file main.s
   Uses
      At line 81 in file main.s
Comment: GPIO_LOCK_KEY used once
GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AFSEL_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 98 in file main.s
Comment: GPIO_PORTE_DATA_R used once
GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 76 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 73 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 37 in file main.s
   Uses
      None
Comment: GPIO_PORTF_AFSEL_R unused
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 83 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 35 in file main.s
   Uses
      At line 99 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 90 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 87 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 80 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 93 in file main.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 43 in file main.s
   Uses
      At line 67 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
breathIncrement 000007D0

Symbol: breathIncrement
   Definitions
      At line 50 in file main.s
   Uses
      At line 193 in file main.s
Comment: breathIncrement used once
comparison 000F4240

Symbol: comparison
   Definitions
      At line 52 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 179 in file main.s
      At line 229 in file main.s

increment 001E8480

Symbol: increment
   Definitions
      At line 47 in file main.s
   Uses
      At line 103 in file main.s
Comment: increment used once
initHighPulse 002DC6C0

Symbol: initHighPulse
   Definitions
      At line 45 in file main.s
   Uses
      At line 101 in file main.s
      At line 233 in file main.s

initLowPulse 006ACFC0

Symbol: initLowPulse
   Definitions
      At line 46 in file main.s
   Uses
      At line 102 in file main.s
      At line 234 in file main.s

total 00989680

Symbol: total
   Definitions
      At line 48 in file main.s
   Uses
      At line 104 in file main.s
      At line 235 in file main.s

19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 54 in file main.s
   Uses
      At line 65 in file main.s
Comment: TExaS_Init used once
1 symbol
374 symbols in table
